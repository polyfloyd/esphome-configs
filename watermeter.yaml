esphome:
  name: watermeter
  on_boot:
    then:
      - pulse_meter.set_total_pulses:
          id: water_meter
          value: !lambda "return id(g_total_pulses).state;"

esp32:
  board: esp32thing
  framework:
    type: arduino

logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 3min

ota:
  platform: esphome
  password: !secret ota_password

mqtt:
  broker: mqtt.local


text_sensor:
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true
    state_topic: esphome/watermeter/version

sensor:
  - platform: wifi_signal
    name: "WiFi Signal dB"
    update_interval: 10s
    state_topic: esphome/watermeter/wifi_signal
    retain: false

  - platform: pulse_meter
    id: water_meter
    pin: 16
    name: "Water Consumption"
    unit_of_measurement: 'L/min'
    state_topic: watermeter/water_consumption
    device_class: water
    state_class: measurement
    icon: mdi:water
    total:
      id: total_pulses
      unit_of_measurement: 'L'
      on_value:
        - number.set:
            id: g_total_pulses
            value: !lambda "return x;"

number:
  - platform: template
    id: g_total_pulses
    name: "Water Consumed Total"
    state_topic: watermeter/water_consumed_total
    restore_value: true
    initial_value: 0
    optimistic: true
    min_value: 0
    step: 1
    max_value: 99999999
    unit_of_measurement: 'L'
    device_class: water
    icon: mdi:water
